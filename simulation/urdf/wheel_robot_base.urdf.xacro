<?xml version="1.0"?>
<robot name="wheel_robot_base" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Included URDF/XACRO Files -->
  <xacro:include filename="$(find journal1-sim)/urdf/materials.urdf.xacro" />
  <xacro:include filename="$(find journal1-sim)/urdf/wheel.urdf.xacro" />

  <!-- PROPERTY LIST -->
  <!--All units in m-kg-s-radians unit system -->
  <property name="M_PI" value="3.1415926535897931" />

  <!-- Main Body-base -->
  <xacro:property name="base_x_size" value="1.0" />
  <xacro:property name="base_y_size" value="0.5" />
  <xacro:property name="base_z_size" value="0.25" />
  <xacro:property name="base_mass" value="70" /> <!-- in kg-->
  <xacro:property name="wheel_radius" value="0.2" />
  <xacro:property name="base_z_origin_to_wheel_origin" value="0.0" />

  <xacro:property name="height_joint_imu"         value="${base_y_size+0.020}"/>


  <!--Inertial macros for the box and cylinder. Units are kg*m^2-->
  <xacro:macro name="box_inertia" params="m x y z">
    <inertia  ixx="${m*(y*y+z*z)/12}" ixy = "0" ixz = "0"
              iyy="${m*(x*x+z*z)/12}" iyz = "0"
              izz="${m*(x*x+z*z)/12}" />
  </xacro:macro>

  <!-- dummy link -->
  <!-- <link name="odom" /> -->

  <!-- BASE-FOOTPRINT -->
  <!-- base_link is a fictitious link(frame) that is on the ground right below base_body_link origin -->
  <link name="base_link">
    <inertial>
      <mass value="0.0001" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
          iyy="0.0001" iyz="0.0"
          izz="0.0001" />
    </inertial>
    <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <box size="0.001 0.001 0.001" />
        </geometry>
    </visual>
  </link>
<!-- 
  <joint name="odom_joint" type="fixed">
    <parent link="base_link" />
    <child link="odom" />
  </joint> -->

  

  <gazebo reference="base_link">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <joint name="base_link_joint" type="fixed">
    <origin xyz="0 0 ${wheel_radius - base_z_origin_to_wheel_origin}" rpy="0 0 0" />
    <parent link="base_link"/>
    <child link="base_body_link" />
  </joint>

  <!-- BASE-LINK -->
  <!--Actual body/chassis of the robot-->
  <link name="base_body_link">
    <inertial>
      <mass value="${base_mass}" />
      <origin xyz="0 0 0" />
      <!--The 3x3 rotational inertia matrix. -->
      <xacro:box_inertia  m="${base_mass}" x="${base_x_size}" y="${base_y_size}" z="${base_z_size}"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="1 0.5 0.25"/>
      </geometry>
      <material name="Yellow" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0 " />
      <geometry>
        <box size="1 0.5 0.25"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="base_body_link">
    <material>Gazebo/Yellow</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <!-- WHEELs -->
  <xacro:wheel fb="front" lr="right" parent="base_body_link" translateX="1" translateY="-1" flipY="-1"/>
  <xacro:wheel fb="front" lr="left" parent="base_body_link" translateX="1" translateY="1" flipY="-1"/>
  <xacro:wheel fb="back" lr="right" parent="base_body_link" translateX="-1" translateY="-1" flipY="-1"/>
  <xacro:wheel fb="back" lr="left" parent="base_body_link" translateX="-1" translateY="1" flipY="-1"/>

  <gazebo>

    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <ros>
      </ros>
      <update_rate>50</update_rate>
      <num_wheel_pairs>2</num_wheel_pairs>
      
      <!-- wheels0 -->
      <left_joint>front_left_wheel_joint</left_joint>
      <right_joint>front_right_wheel_joint</right_joint>

      <!-- wheels1-->
      <left_joint>back_left_wheel_joint</left_joint>
      <right_joint>back_right_wheel_joint</right_joint>

      <wheel_separation>${base_y_size}</wheel_separation>
      <wheel_separation>${base_y_size}</wheel_separation>

      <wheel_diameter>${wheel_radius}</wheel_diameter>
      <wheel_diameter>${2*wheel_radius}</wheel_diameter>
      <max_wheel_torque>35</max_wheel_torque>


      <command_topic>cmd_vel</command_topic>

      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>
      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>

    </plugin>
  </gazebo>


  <xacro:arg name="gpu" default="true"/>
  <xacro:property name="gpu" value="$(arg gpu)" />

  <!-- <xacro:include filename="$(find journal1-sim)/urdf/VLP-16.urdf.xacro"/>
  <xacro:VLP-16 parent="base_link" name="velodyne" topic="/points_raw" hz="10" samples="440" gpu="${gpu}">
    <origin xyz="0 0 0.4" rpy="0 0 0" />
  </xacro:VLP-16> -->
  <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro"/>
  <xacro:VLP-16 parent="base_link" name="velodyne" topic="/points_raw" hz="10" samples="440" gpu="${gpu}">
    <origin xyz="0 0 0.4" rpy="0 0 0" />
  </xacro:VLP-16>


  <!-- imu_link -->
  <link  name="imu_link"/>
  <joint name="joint_imu" type="fixed">
      <parent link="base_link"/>
      <child  link="imu_link"/>
      <origin xyz="0 0.02 ${height_joint_imu}" rpy="${radians(0)} ${radians(0)} 0"/>
  </joint>
  <gazebo reference="imu_link">
      <gravity>true</gravity>
      <sensor name="imu_sensor" type="imu">
          <always_on>true</always_on>
          <update_rate>100</update_rate>
          <visualize>true</visualize>
          <topic>data</topic>
          <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
              <topicName>imu/raw</topicName>
              <bodyName>imu_link</bodyName>
              <updateRateHZ>10.0</updateRateHZ>
              <gaussianNoise>0.0</gaussianNoise>
              <xyzOffset>0 0 0</xyzOffset>
              <rpyOffset>0 0 0</rpyOffset>
              <frameName>imu_link</frameName>
          </plugin>
          <pose>0 0 0 0 0 0</pose>
      </sensor>
  </gazebo>


</robot>
